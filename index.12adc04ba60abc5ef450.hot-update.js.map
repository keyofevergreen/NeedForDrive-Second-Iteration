{"version":3,"file":"index.12adc04ba60abc5ef450.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAzBA;AANA;AAsCA;;AAEA;;;;;;;;AC3EA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/Edit.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CarEdit from './components/CarEdit/CarEdit';\nimport OrderStatusEdit from './components/OrderStatusEdit/OrderStatusEdit';\nimport CategoryEdit from './components/CategoryEdit/CategoryEdit';\nimport PointEdit from './components/PointEdit/PointEdit';\nimport CityEdit from './components/CityEdit/CityEdit';\nimport RateEdit from './components/RateEdit/RateEdit';\nimport RateTypesEdit from './components/RateTypesEdit/RateTypesEdit';\nimport EditRouter from './components/EditRouter/EditRouter';\nimport Alert from '../../components/Alert/Alert';\nimport { ErrorHandlerState } from '../../types/Error';\nimport { Dispatcher } from '../../types/store';\nimport { clearSuccessAlert } from '../../store/ErrorProvider/actions';\nimport styles from './styles.module.scss';\n\nconst Edit = (): React.ReactElement => {\n  const dispatch = useDispatch<Dispatcher>();\n  const [show, setShow] = useState<boolean>(false);\n  const [alertMessage, setAlertMessage] = useState<string | null>(null);\n\n  const { successAlert } = useSelector<{\n    errorHandler: ErrorHandlerState;\n  }, ErrorHandlerState>((state) => state.errorHandler);\n\n  useEffect(() => {\n    if (successAlert) {\n      setAlertMessage(successAlert);\n      setShow(true);\n      dispatch(clearSuccessAlert());\n    }\n  }, [successAlert]);\n\n  return (\n    <div className={styles['edit-route']}>\n      <Alert\n        onClose={() => setShow(false)}\n        show={show}\n        alertMessage={alertMessage}\n      />\n      <Routes>\n        <Route path=\"car\" element={<EditRouter />}>\n          <Route index element={<CarEdit />} />\n          <Route path=\":carId\" element={<CarEdit />} />\n        </Route>\n        <Route path=\"order-status\" element={<EditRouter />}>\n          <Route index element={<OrderStatusEdit />} />\n          <Route path=\":orderStatusId\" element={<OrderStatusEdit />} />\n        </Route>\n        <Route path=\"category\" element={<EditRouter />}>\n          <Route index element={<CategoryEdit />} />\n          <Route path=\":categoryId\" element={<CategoryEdit />} />\n        </Route>\n        <Route path=\"point\" element={<EditRouter />}>\n          <Route index element={<PointEdit />} />\n          <Route path=\":pointId\" element={<PointEdit />} />\n        </Route>\n        <Route path=\"city\" element={<EditRouter />}>\n          <Route index element={<CityEdit />} />\n          <Route path=\":cityId\" element={<CityEdit />} />\n        </Route>\n        <Route path=\"rate\" element={<EditRouter />}>\n          <Route index element={<RateEdit />} />\n          <Route path=\":rateId\" element={<RateEdit />} />\n        </Route>\n        <Route path=\"rate-types\" element={<EditRouter />}>\n          <Route index element={<RateTypesEdit />} />\n          <Route path=\":rateTypesId\" element={<RateTypesEdit />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n};\n\nexport default Edit;\n","__webpack_require__.h = () => (\"8294a862092cafcc29f5\")"],"names":[],"sourceRoot":""}