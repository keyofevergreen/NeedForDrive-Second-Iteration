{"version":3,"file":"index.d9555543a86fd77b227a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;;;;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAIA;AACA;AAFA;AAAA;AAHA;AAYA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAJA;AAQA;AAAA;AAEA;AACA;AAFA;AAIA;AADA;AAGA;AANA;AAUA;AACA;AAFA;AAAA;AAVA;AAmBA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AADA;AAGA;AARA;AAYA;AACA;AAFA;AAAA;AAbA;AAzCA;AAgEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AADA;AAGA;AAPA;AAWA;AACA;AAFA;AAAA;AAXA;AAFA;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAIA;AARA;AAUA;AAAA;AAAA;AAEA;AAAA;AAAA;AAZA;AADA;AAFA;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAJA;AAAA;AAVA;AAsBA;AACA;AAFA;AAAA;AAtBA;AA+BA;AAAA;AAGA;AACA;AAEA;AACA;AALA;AAFA;AAjCA;AA/CA;AAhEA;AAPA;AAJA;AANA;AAmLA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnFA","sources":["webpack://NeedForDrive-Second-Iteration/./src/components/InputErrorMessageProvider/styles.module.scss","webpack://NeedForDrive-Second-Iteration/./src/components/InputErrorMessageProvider/InputErrorMessageProvider.tsx","webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/CarEdit/CarEdit.tsx","webpack://NeedForDrive-Second-Iteration/./src/components/InputErrorMessageProvider/styles.module.scss?158e","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".input-wrap___YU671 {\\n  position: relative;\\n}\\n.input-wrap___YU671 input {\\n  padding: 8px 11px;\\n  color: var(--dark-blue);\\n  font-size: 11px;\\n}\\n.input-wrap___YU671 .input-message {\\n  position: absolute;\\n  bottom: -18px;\\n  left: 11px;\\n  color: var(--red);\\n  font-size: 10px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/InputErrorMessageProvider/styles.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAA;AACF;AACE;EACE,iBAAA;EACA,uBAAA;EACA,eAAA;AACJ;AAGI;EACE,kBAAA;EACA,aAAA;EACA,UAAA;EACA,iBAAA;EACA,eAAA;AADN\",\"sourcesContent\":[\".input-wrap {\\n  position: relative;\\n\\n  input {\\n    padding: 8px 11px;\\n    color: var(--dark-blue);\\n    font-size: 11px;\\n  }\\n\\n  :global {\\n    .input-message {\\n      position: absolute;\\n      bottom: -18px;\\n      left: 11px;\\n      color: var(--red);\\n      font-size: 10px;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"input-wrap\": \"input-wrap___YU671\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport styles from './styles.module.scss';\n\ninterface IInputErrorMessageProps {\n  children: React.ReactElement,\n  errorMessage: string | null,\n}\n\nconst InputErrorMessageProvider = ({ children, errorMessage }: IInputErrorMessageProps) => {\n  return (\n    <div className={styles['input-wrap']}>\n      {children}\n      {(errorMessage) && (\n        <Form.Text\n          id=\"username\"\n          bsPrefix=\"input-message\"\n        >\n          {errorMessage}\n        </Form.Text>\n      )}\n    </div>\n  );\n};\n\nexport default InputErrorMessageProvider;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { CarEditForm } from '../../../../types/Edit';\nimport { useCategory } from '../../../Categories/hooks';\nimport { imageOnErrorHandler } from '../../../../utils/helpers/imageOnErrorHandler';\nimport ContentContainer from '../../../../components/ContentContainer/ContentContainer';\nimport FormContainer from '../../../../components/FormContainer/FormContainer';\nimport MyProgressBar from './components/MyProgressBar/MyProgressBar';\nimport styles from './styles.module.scss';\nimport InputErrorMessageProvider from '../../../../components/InputErrorMessageProvider/InputErrorMessageProvider';\n\nconst CarEdit = (): React.ReactElement => {\n  const { carId } = useParams();\n  const [colorValue, setColorValue] = useState<string>('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [categories, categoriesLoading] = useCategory();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    getFieldState,\n    formState: { errors },\n    formState,\n  } = useForm<CarEditForm>({\n    defaultValues: {\n      car: '',\n      category: 'Выберите категорию',\n      description: '',\n      colorsArray: [],\n      image: null,\n    }\n  });\n  const { ref } = register('colorsArray', {\n    validate: (value) => value.length > 0 || 'Добавьте хотя бы один цвет',\n  });\n  const currentCar = watch('car');\n  const currentImage = watch('image');\n  const currentCategory = watch('category');\n  const colorsCheckboxes = watch('colorsArray');\n\n  useEffect(() => {\n    if (categories) {\n      const currCategoryObject = categories.find((category) => category.id === currentCategory);\n      setSelectedCategory(currCategoryObject?.name);\n    }\n  }, [currentCategory]);\n\n  const addColor = (): void => {\n    const currentColors = getValues('colorsArray');\n    setValue('colorsArray', [...currentColors, colorValue], { shouldValidate: true, shouldDirty: true });\n    setColorValue('');\n  };\n\n  const deleteColor = (colorForDelete): void => {\n    const currentColors = getValues('colorsArray');\n    setValue('colorsArray', currentColors.filter((color) => color !== colorForDelete), { shouldDirty: true });\n  };\n\n  const imageUploadHandler = (e): void => {\n    const selectedImg = e.target.files[0];\n    if (selectedImg) {\n      setValue('image', selectedImg, { shouldDirty: true });\n    }\n  };\n\n  useEffect(() => {\n    console.log(currentImage);\n  }, [currentImage]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Need For Drive - Карточка автомобиля</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Home page\" />\n      </Helmet>\n      <ContentContainer\n        title=\"Карточка автомобиля\"\n        className={styles['car-edit-container-wrap']}\n      >\n        <Form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={handleSubmit((data) => {\n            console.log(data);\n          })}\n        >\n          <div className={styles['car-edit']}>\n            <div className={styles['car-edit__card']}>\n              <img\n                src={currentImage && currentImage.length > 0 ? URL.createObjectURL(currentImage[0]) : ''}\n                alt=\"car-name\"\n                onError={imageOnErrorHandler}\n              />\n              <div className={styles['car-edit__details']}>\n                <h2>\n                  {currentCar}\n                </h2>\n                <span>\n                  {selectedCategory && selectedCategory.length > 0 ? selectedCategory : 'Категория не выбрана'}\n                </span>\n              </div>\n              <div className={styles['car-edit__file-input-container']}>\n                <Form.Control\n                  type=\"file\"\n                  accept=\"image/png, image/jpeg\"\n                  {...register('image', {\n                    required: 'Выберите изображение автомобиля',\n                  })}\n                  isInvalid={!!(errors.image)}\n                />\n                {(errors.image?.message) && (\n                  <Form.Text\n                    id=\"username\"\n                    bsPrefix=\"input-message\"\n                  >\n                    {errors.image?.message}\n                  </Form.Text>\n                )}\n              </div>\n              <MyProgressBar\n                formStates={[\n                  getFieldState('car', formState),\n                  getFieldState('category', formState),\n                  getFieldState('colorsArray', formState),\n                  getFieldState('image', formState),\n                  getFieldState('description', formState),\n                ]}\n              />\n              <Form.Group className={styles['car-edit__description-textarea']} controlId=\"carDescription\">\n                <Form.Label>Описание</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={4}\n                  aria-describedby=\"carDescription\"\n                  placeholder=\"Введите описание\"\n                  {...register('description', {\n                    required: 'Это поле не должно быть пустым',\n                  })}\n                  isInvalid={!!(errors.description)}\n                />\n                {(errors.description?.message) && (\n                  <Form.Text\n                    id=\"username\"\n                    bsPrefix=\"input-message\"\n                  >\n                    {errors.description?.message}\n                  </Form.Text>\n                )}\n              </Form.Group>\n            </div>\n            <FormContainer\n              title=\"Настройки автомобиля\"\n              isCreateTable={!carId}\n              className={styles['car-form-container']}\n            >\n              <Form.Group controlId=\"carName\">\n                <Form.Label>Модель автомобиля</Form.Label>\n                <div className=\"input-wrap\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Введите модель\"\n                    aria-describedby=\"carName\"\n                    {...register('car', {\n                      required: 'Это поле не должно быть пустым'\n                    })}\n                    isInvalid={!!(errors.car)}\n                  />\n                  {(errors.car?.message) && (\n                    <Form.Text\n                      id=\"username\"\n                      bsPrefix=\"input-message\"\n                    >\n                      {errors.car?.message}\n                    </Form.Text>\n                  )}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"categoryName\">\n                <Form.Label>Тип автомобиля</Form.Label>\n                <InputErrorMessageProvider errorMessage={errors.category?.message}>\n                  <Form.Select\n                    size=\"sm\"\n                    disabled={categoriesLoading}\n                    aria-describedby=\"pointCity\"\n                    {...register('category', {\n                      required: 'Это поле не должно быть пустым',\n                      validate: value => value !== 'Выберите категорию' || 'Вы не выбрали категорию',\n                    })}\n                    isInvalid={!!(errors.category)}\n                  >\n                    <option value=\"Выберите категорию\">Выберите категорию</option>\n                    {categories && categories.map((category) => (\n                      <option key={category.id} value={category.id}>{category.name}</option>\n                    ))}\n                  </Form.Select>\n                </InputErrorMessageProvider>\n              </Form.Group>\n              <Form.Group controlId=\"CarColors\">\n                <Form.Label>Доступные цвета</Form.Label>\n                <div className=\"input-wrap\">\n                  <InputGroup className={styles['form__colors-input-group']}>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Введите цвет\"\n                      aria-describedby=\"CarColors\"\n                      value={colorValue}\n                      ref={ref}\n                      onChange={(e) => setColorValue(e.target.value)}\n                      isInvalid={!!(errors.colorsArray)}\n                    />\n                    <Button\n                      variant=\"outline-primary\"\n                      className={styles['form__colors-add-button']}\n                      onClick={addColor}\n                      disabled={colorValue.length === 0}\n                    >\n                      Add Color\n                    </Button>\n                  </InputGroup>\n                  {/*@ts-ignore*/}\n                  {(errors.colorsArray?.message) && (\n                    <Form.Text\n                      id=\"username\"\n                      bsPrefix=\"input-message\"\n                    >\n                      {/*@ts-ignore*/}\n                      {errors.colorsArray?.message}\n                    </Form.Text>\n                  )}\n                </div>\n                <div className={styles['form__colors-checkbox']}>\n                  {colorsCheckboxes.map((color, index) => (\n                    <Form.Check\n                      type=\"checkbox\"\n                      label={color}\n                      key={`color-${index}`}\n                      onClick={() => deleteColor(color)}\n                      defaultChecked\n                    />\n                  ))}\n                </div>\n              </Form.Group>\n            </FormContainer>\n          </div>\n        </Form>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default CarEdit;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/@teamsupercell/typings-for-css-modules-loader/src/index.js!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[10].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[10].use[3]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[10].use[4]!./styles.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/@teamsupercell/typings-for-css-modules-loader/src/index.js!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[10].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[10].use[3]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[10].use[4]!./styles.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/@teamsupercell/typings-for-css-modules-loader/src/index.js!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[10].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[10].use[3]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[10].use[4]!./styles.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","__webpack_require__.h = () => (\"db6a32eae1453a57830f\")"],"names":[],"sourceRoot":""}