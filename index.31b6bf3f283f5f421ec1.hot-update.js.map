{"version":3,"file":"index.31b6bf3f283f5f421ec1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;;;;;;;;ACrCA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Cars/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars } from '../../store/Cars/thunks';\nimport { Dispatcher } from '../../types/store';\nimport { CarResponse, CarsAxiosConfig, CarSort, CarsState } from '../../types/Cars';\n\nexport const useCars = (sorts?: CarSort, page?: number): [CarResponse, boolean, number | null] => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { cars, loading, error, uploadedCar } = useSelector<{\n    cars: CarsState;\n  }, CarsState>((state) => state.cars);\n\n  useEffect(() => {\n    const { categoryId, tank, lowerPrice, higherPrice } = sorts;\n    const config: CarsAxiosConfig = {\n      params: {\n        page,\n        limit: 10,\n      },\n    };\n    config.params['priceMin[$gt]'] = lowerPrice;\n    config.params['priceMax[$lt]'] = higherPrice;\n\n    if (categoryId && categoryId !== 'Все категории') {\n      config.params['categoryId[id]'] = categoryId;\n    }\n    if (tank && tank !== 'Любой запас топлива') {\n      if (tank === '100') {\n        config.params.tank = tank;\n      } else {\n        config.params['tank[$gt]'] = tank;\n      }\n    }\n    dispatch(fetchCars(config));\n  }, [sorts, page, uploadedCar]);\n\n  return [cars, loading, error];\n};\n","__webpack_require__.h = () => (\"926dfd6708c04eb02d71\")"],"names":[],"sourceRoot":""}