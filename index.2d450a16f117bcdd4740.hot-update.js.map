{"version":3,"file":"index.2d450a16f117bcdd4740.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;AAEA;;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAGA;AAAA;AAAA;AAJA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AASA;AAAA;AAAA;AAAA;AAVA;AAbA;;AA+BA;;;;;;;;AChDA","sources":["webpack://NeedForDrive-Second-Iteration/./src/components/FormContainer/FormContainer.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { FormHTMLAttributes } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport classNames from 'classnames/bind';\nimport styles from './styles.module.scss';\n\nconst cx = classNames.bind(styles);\n\ninterface IFormContainerProps extends React.HTMLProps<HTMLFormElement>{\n  children: React.ReactNode,\n  title: string,\n  className?: string,\n  onDelete?: React.MouseEventHandler,\n  onSubmit?: React.MouseEventHandler,\n  isCreateTable?: boolean,\n}\n\nconst FormContainer = ({ children, title, className, onSubmit, onDelete, isCreateTable }: IFormContainerProps): React.ReactElement => (\n  <Form\n    className={cx('form-container', className)}\n    noValidate\n    autoComplete=\"off\"\n  >\n    <div>\n      <h3>\n        {title}\n      </h3>\n      <div className={styles['form']}>\n        {children}\n      </div>\n    </div>\n    <div className={styles['form-btn-line']}>\n      <div>\n        <Button variant=\"primary\" size=\"sm\" onClick={onSubmit}>\n          {isCreateTable ? 'Создать' : 'Сохранить'}\n        </Button>\n        <Button variant=\"light\" size=\"sm\">\n          Отменить\n        </Button>\n      </div>\n      {!isCreateTable && (\n        <Button variant=\"danger\" size=\"sm\">\n          Удалить\n        </Button>\n      )}\n    </div>\n  </Form>\n);\n\nexport default FormContainer;\n","__webpack_require__.h = () => (\"5f56d18654a8e156486d\")"],"names":[],"sourceRoot":""}