{"version":3,"file":"index.96ef0bcb36f5654acb7f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;AAqBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAIA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAKA;AADA;AAAA;AAXA;AAoBA;AAAA;AAGA;AAEA;AACA;AACA;AALA;AAFA;AAtBA;AAmCA;;AAEA;;;;;;;;AC7IA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Order/components/OrderFilters/OrderFilters.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { getTime, startOfToday, subDays, subMonths } from 'date-fns';\nimport { Checkbox, Filter } from '../../../../types/Filter';\nimport { useCities } from '../../../Cities/hooks';\nimport { useOrderStatuses } from '../../../OrderStatus/hooks';\nimport styles from './styles.module.scss';\n\nconst TODAY = startOfToday();\nconst LAST_WEEK = subDays(TODAY, 7);\nconst LAST_MONTH = subMonths(TODAY, 1);\n\nconst dateFilterOptions = [\n  {\n    id: getTime(TODAY),\n    name: 'За день',\n  },\n  {\n    id: getTime(LAST_WEEK),\n    name: 'За неделю',\n  },\n  {\n    id: getTime(LAST_MONTH),\n    name: 'За месяц',\n  },\n];\n\ninterface IOrderFilters {\n  dateFilter: string,\n  setDateFilter: Dispatch<SetStateAction<string>>,\n  cityFilter: string,\n  setCityFilter: Dispatch<SetStateAction<string>>,\n  orderStatusFilter: string,\n  setOrderStatusFilter: Dispatch<SetStateAction<string>>,\n  setFullTankFilter: Dispatch<SetStateAction<boolean>>\n  isFullTankFilter: boolean,\n  setNeedChildChairFilter: Dispatch<SetStateAction<boolean>>\n  isNeedChildChairFilter: boolean,\n  setRightWheelFilter: Dispatch<SetStateAction<boolean>>\n  isRightWheelFilter: boolean,\n}\n\nconst OrderFilters = (\n  {\n    dateFilter,\n    setDateFilter,\n    cityFilter,\n    setCityFilter,\n    orderStatusFilter,\n    setOrderStatusFilter,\n    setFullTankFilter,\n    isFullTankFilter,\n    setNeedChildChairFilter,\n    isNeedChildChairFilter,\n    setRightWheelFilter,\n    isRightWheelFilter,\n  }: IOrderFilters\n): React.ReactElement => {\n  const [cities, citiesLoading] = useCities();\n  const [orderStatus, orderStatusLoading] = useOrderStatuses();\n  const filters: Filter[] = [\n    {\n      id: 1,\n      value: dateFilter,\n      defaultValue: 'За все время',\n      onChange: setDateFilter,\n      options: dateFilterOptions,\n    },\n    {\n      id: 2,\n      value: cityFilter,\n      defaultValue: 'Все города',\n      disabled: citiesLoading,\n      onChange: setCityFilter,\n      options: cities,\n    },\n    {\n      id: 3,\n      value: orderStatusFilter,\n      defaultValue: 'Все заказы',\n      disabled: orderStatusLoading,\n      onChange: setOrderStatusFilter,\n      options: orderStatus,\n    },\n  ];\n\n  const checkboxes: Checkbox[] = [\n    {\n      label: 'Полный бак',\n      value: isFullTankFilter,\n      onChange: setFullTankFilter,\n    },\n    {\n      label: 'Детское кресло',\n      value: isNeedChildChairFilter,\n      onChange: setNeedChildChairFilter,\n    },\n    {\n      label: 'Правый руль',\n      value: isRightWheelFilter,\n      onChange: setRightWheelFilter,\n    },\n  ];\n  return (\n    <>\n      {filters.map((filter) => (\n        <Form.Select\n          key={filter.id}\n          size=\"sm\"\n          value={filter.value}\n          onChange={(e) => filter.onChange(e.target.value)}\n          disabled={filter.disabled}\n        >\n          <option value={filter.defaultValue}>\n            {filter.defaultValue}\n          </option>\n          {filter.options && filter.options.map((option) => (\n            <option\n              value={option.id}\n              key={option.id}\n            >\n              {option.name}\n            </option>\n          ))}\n        </Form.Select>\n      ))}\n      <div className={styles['checkbox-wrap']}>\n        {checkboxes.map((checkbox) => (\n          <Form.Check\n            type=\"checkbox\"\n            key={checkbox.label}\n            label={checkbox.label}\n            onChange={() => checkbox.onChange(!checkbox.value)}\n            checked={checkbox.value}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default OrderFilters;\n","__webpack_require__.h = () => (\"415b5df455700525be2e\")"],"names":[],"sourceRoot":""}