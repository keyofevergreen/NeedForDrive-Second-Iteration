{"version":3,"file":"index.d39a705fc565fcc822bf.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAFA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAFA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAEA;AAAA;AAAA;AATA;AADA;AAFA;AArBA;AADA;AANA;AAiDA;;AAEA;;;;;;;;ACrFA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/PointEdit/PointEdit.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { useForm } from 'react-hook-form';\nimport ContentContainer from '../../../../components/ContentContainer/ContentContainer';\nimport { useCities } from '../../../Cities/hooks';\nimport InputsContainer from '../../../../components/InputsContainer/InputsContainer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Dispatcher } from '../../../../types/store';\nimport { PointForm } from '../../../../types/Edit';\nimport { useUploadedEntity } from '../../../../utils/helpers/hooks';\n\nconst PointEdit = (): React.ReactElement => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch<Dispatcher>();\n  const { orderStatusId } = useParams();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm<PointForm>({\n    defaultValues: {\n      name: '',\n      address: '',\n      cityId: 'Выберите город',\n    }\n  });\n  const orderStatusUploading = useUploadedEntity(orderStatusId, 'order-status');\n  const [cities, citiesLoading] = useCities();\n  const [selectedCity, setSelectedCity] = useState<string>('Выберите город');\n\n  return (\n    <>\n      <Helmet>\n        <title>Need For Drive - Карточка пункта выдачи</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Home page\" />\n      </Helmet>\n      <ContentContainer title=\"Карточка пункта выдачи\">\n        <InputsContainer title=\"Настройки пункта выдачи\">\n          <Form.Group controlId=\"pointName\">\n            <Form.Label>Название</Form.Label>\n            <div className=\"input-wrap\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Введите название\"\n                aria-describedby=\"pointName\"\n              />\n            </div>\n          </Form.Group>\n          <Form.Group controlId=\"pointAddress\">\n            <Form.Label>Адрес</Form.Label>\n            <div className=\"input-wrap\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Введите адрес\"\n                aria-describedby=\"pointAddress\"\n              />\n            </div>\n          </Form.Group>\n          <Form.Group controlId=\"pointCity\">\n            <Form.Label>Город</Form.Label>\n            <div className=\"input-wrap\">\n              <Form.Select\n                size=\"sm\"\n                value={selectedCity}\n                onChange={(e) => setSelectedCity(e.target.value)}\n                disabled={citiesLoading}\n                aria-describedby=\"pointCity\"\n              >\n                <option value=\"Выберите город\">Выберите город</option>\n                {cities && cities.map((city) => (\n                  <option key={city.id} value={city.id}>{city.name}</option>\n                ))}\n              </Form.Select>\n            </div>\n          </Form.Group>\n        </InputsContainer>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default PointEdit;\n","__webpack_require__.h = () => (\"4d4a03ac1a26331de148\")"],"names":[],"sourceRoot":""}