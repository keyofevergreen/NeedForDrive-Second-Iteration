{"version":3,"file":"index.2dead4a042f556e4fafe.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;;AAEA;AACA;AACA;;AACA;AACA;AAEA;AACA;;;;;;;;AC5BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/RateTypes/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRateTypes } from '../../store/RateTypes/thunks';\nimport { Dispatcher } from '../../types/store';\nimport { RateTypeResponse, RateTypesAxiosConfig, RateTypesState } from '../../types/RateTypes';\n\nexport const useRateTypes = (name?: string | null, page?: number): [RateTypeResponse, boolean, number | null] => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { rateTypes, loading, error } = useSelector<{\n    rateTypes: RateTypesState;\n  }, RateTypesState>((state) => state.rateTypes);\n\n  useEffect(() => {\n    const config: RateTypesAxiosConfig = {\n      params: {\n        page,\n        limit: page ? 10 : 1000,\n      },\n    };\n    config.params['sort[createdAt]'] = -1;\n\n    if (name && name !== 'Все тарифы') {\n      config.params.name = name;\n    }\n    dispatch(fetchRateTypes(config));\n  }, [name, page]);\n\n  return [rateTypes, loading, error];\n};\n","__webpack_require__.h = () => (\"c9039a0a474616d3b6fb\")"],"names":[],"sourceRoot":""}