{"version":3,"file":"index.672d5fd142637abae452.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACZA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AA/BA;AAuCA;;;;;;;;;;;;;;;;;ACvDA;AAOA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/store/RateTypes/actions.ts","webpack://NeedForDrive-Second-Iteration/./src/store/RateTypes/reducer.ts","webpack://NeedForDrive-Second-Iteration/./src/store/RateTypes/thunks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const requestRateTypes = createAction('Rates types is fetching...');\n\nexport const requestRateTypesSuccess = createAction<object>('Rates types has already fetched');\n\nexport const requestRateTypesError = createAction<number>('Rates types fetched with error');\n\nexport const requestRateType = createAction('Rate type is fetching...');\n\nexport const requestRateTypeSuccess = createAction<object>('Rate type has already fetched');\n\nexport const requestRateTypeError = createAction<number>('Rate type fetched with error');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { RateType, RateTypesState } from '../../types/RateTypes';\nimport {\n  requestRateType, requestRateTypeError,\n  requestRateTypes,\n  requestRateTypesError,\n  requestRateTypesSuccess,\n  requestRateTypeSuccess\n} from './actions';\n\nconst rateTypesReducer = createReducer<RateTypesState>({\n  rateTypes: null,\n  loading: false,\n  error: null,\n  rateTypeById: null,\n  rateTypeByIdLoading: false,\n  rateTypeByIdError: null,\n}, {\n  [requestRateTypes.type]: (state) => ({\n    ...state,\n    rateTypes: null,\n    loading: true,\n    error: null,\n  }),\n  [requestRateTypesSuccess.type]: (state, { payload }) => ({\n    ...state,\n    rateTypes: payload,\n    loading: false,\n    error: null,\n  }),\n  [requestRateTypesError.type]: (state, { payload }) => ({\n    ...state,\n    rateTypes: null,\n    loading: false,\n    error: payload,\n  }),\n  [requestRateType.type]: (state) => ({\n    ...state,\n    rateTypeById: null,\n    rateTypeByIdLoading: true,\n    rateTypeByIdError: null,\n  }),\n  [requestRateTypeSuccess.type]: (state, { payload }) => ({\n    ...state,\n    rateTypeById: payload,\n    rateTypeByIdLoading: false,\n    rateTypeByIdError: null,\n  }),\n  [requestRateTypeError.type]: (state, { payload }) => ({\n    ...state,\n    rateTypeById: null,\n    rateTypeByIdLoading: false,\n    rateTypeByIdError: payload,\n  }),\n});\n\nexport default rateTypesReducer;\n","import { ThunkResult } from '../../types/thunk';\nimport {\n  requestRateType, requestRateTypeError,\n  requestRateTypes,\n  requestRateTypesError,\n  requestRateTypesSuccess,\n  requestRateTypeSuccess\n} from './actions';\nimport { addToErrorHandler } from '../ErrorProvider/actions';\n\nexport const fetchRateTypes = (config: object): ThunkResult => async (dispatch, getState, { services }) => {\n  try {\n    dispatch(requestRateTypes());\n    const { data } = await services.table.getEntities('rateType', config);\n    dispatch(requestRateTypesSuccess(data));\n  } catch (error) {\n    dispatch(requestRateTypesError(error.response.status));\n    dispatch(addToErrorHandler(error.response.status));\n  }\n};\n\nexport const fetchRateTypeById = (rateTypeId: string): ThunkResult => async (dispatch, getState, { services }) => {\n  try {\n    dispatch(requestRateType());\n    const { data } = await services.table.getEntities('rateType', {}, rateTypeId);\n    dispatch(requestRateTypeSuccess(data.data));\n  } catch (error) {\n    dispatch(requestRateTypeError(error.response.status));\n    dispatch(addToErrorHandler(error.response.status));\n  }\n};\n","__webpack_require__.h = () => (\"ba4d32798943fe785027\")"],"names":[],"sourceRoot":""}