{"version":3,"file":"index.1d2050539ad5c84ec19d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AAJA;AA/BA;AAuCA;;;;;;;;;;;;;;;;;ACjDA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1BA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;;;;;;;;ACjBA","sources":["webpack://NeedForDrive-Second-Iteration/./src/store/Cars/reducer.ts","webpack://NeedForDrive-Second-Iteration/./src/store/Cars/thunks.ts","webpack://NeedForDrive-Second-Iteration/./src/utils/services/Table/service.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\nimport { CarsState } from '../../types/Cars';\nimport { postCar, postCarError, postCarSuccess, requestCars, requestCarsError, requestCarsSuccess } from './actions';\n\nconst carsReducer = createReducer<CarsState>({\n  cars: null,\n  loading: false,\n  error: null,\n  postCar: null,\n  postLoading: false,\n  postError: null,\n}, {\n  [requestCars.type]: (state) => ({\n    ...state,\n    cars: null,\n    loading: true,\n    error: null,\n  }),\n  [requestCarsSuccess.type]: (state, { payload }) => ({\n    ...state,\n    cars: payload,\n    loading: false,\n    error: null,\n  }),\n  [requestCarsError.type]: (state, { payload }) => ({\n    ...state,\n    cars: null,\n    loading: false,\n    error: payload,\n  }),\n  [postCar.type]: (state) => ({\n    ...state,\n    postCar: null,\n    postLoading: true,\n    postError: null,\n  }),\n  [postCarSuccess.type]: (state, { payload }) => ({\n    ...state,\n    postCar: payload,\n    postLoading: false,\n    postError: null,\n  }),\n  [postCarError.type]: (state, { payload }) => ({\n    ...state,\n    postCar: null,\n    postLoading: false,\n    postError: payload,\n  }),\n});\n\nexport default carsReducer;\n","import { ThunkResult } from '../../types/thunk';\nimport { postCar, postCarError, postCarSuccess, requestCars, requestCarsError, requestCarsSuccess } from './actions';\nimport { CarsAxiosConfig } from '../../types/Cars';\nimport { addToErrorHandler } from '../ErrorProvider/actions';\n\nexport const fetchCars = (config: CarsAxiosConfig): ThunkResult => async (dispatch, getState, { services }) => {\n  try {\n    dispatch(requestCars());\n    const { data } = await services.table.getEntities('car', config);\n    dispatch(requestCarsSuccess(data));\n  } catch (error) {\n    dispatch(requestCarsError(error.response.status));\n    dispatch(addToErrorHandler(error.response.status));\n  }\n};\n\nexport const createCar = (config): ThunkResult => {\n  return async (dispatch, getState, { services }) => {\n    try {\n      dispatch(postCar());\n      const { data } = await services.table.getEntities('car', config);\n      dispatch(postCarSuccess(data));\n    } catch (error) {\n      dispatch(postCarError(error.response.status));\n      dispatch(addToErrorHandler(error.response.status));\n    }\n  };\n};\n","import { AxiosResponse } from 'axios';\nimport instance from '../../../http';\n\nexport interface TableInterface {\n  getEntities: (name: string, config: object) => Promise<AxiosResponse>,\n  postEntities: (name: string, body: object) => Promise<AxiosResponse>,\n}\n\nconst tableService = (): TableInterface => ({\n  getEntities: async (name, config): Promise<AxiosResponse> => {\n    return instance.get(`/db/${name}`, config);\n  },\n  getEntities: async (name, config): Promise<AxiosResponse> => {\n    return instance.post(`/db/${name}`);\n  },\n});\n\nexport default tableService;\n","__webpack_require__.h = () => (\"67e99d7aa27b1f681ee6\")"],"names":[],"sourceRoot":""}