{"version":3,"file":"index.2c1bb2f801c849464657.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAAA;;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;;;;;;;AC5CA","sources":["webpack://NeedForDrive-Second-Iteration/./src/utils/services/SetupInterceptors/service.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import instance from '../../../http';\nimport { setAuth } from '../../../store/Auth/actions';\n\nconst setupInterceptors = (store): void => {\n  const { dispatch } = store;\n\n  instance.interceptors.request.use((config) => {\n    config.headers['X-Api-Factory-Application-Id'] = `${process.env.REACT_APP_API_ID}`;\n    if (localStorage.getItem('token') && config.url !== '/auth/refresh' && config.url !== '/auth/login') {\n      config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n    }\n    if (config.url === '/db/car' && config.method === 'post') {\n      console.log(config);\n    }\n    return config;\n  });\n\n  instance.interceptors.response.use((config) => {\n    return config;\n  }, async (error) => {\n    const originalRequest = error.config;\n    if (error.response?.status === 401 && error.config && !error.config._isRetry) {\n      originalRequest._isRetry = true;\n      try {\n        const refreshToken = localStorage.getItem('refresh');\n        const basicToken = localStorage.getItem('basicToken');\n        const response = await instance.post('/auth/refresh', { refresh_token: refreshToken }, {\n          headers: {\n            'Authorization': `Basic ${basicToken}`,\n          }\n        });\n        await localStorage.setItem('token', response.data.access_token);\n        await localStorage.setItem('refresh', response.data.refresh_token);\n        return await instance.request(originalRequest);\n      } catch (e) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh');\n        localStorage.removeItem('basicToken');\n        dispatch(setAuth(false));\n      }\n    }\n    throw error;\n  });\n};\nexport default setupInterceptors;\n","__webpack_require__.h = () => (\"00efb49fc489f7605301\")"],"names":[],"sourceRoot":""}