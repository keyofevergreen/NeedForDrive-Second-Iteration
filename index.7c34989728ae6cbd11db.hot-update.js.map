{"version":3,"file":"index.7c34989728ae6cbd11db.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AARA;AAFA;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AAFA;AAfA;AADA;AANA;AAqCA;;AAEA;;;;;;;;;;;;;;;;;ACxEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AC/BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/RateEdit/RateEdit.tsx","webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/RateEdit/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport ContentContainer from '../../../../components/ContentContainer/ContentContainer';\nimport { useRateTypes } from '../../../RateTypes/hooks';\nimport onlyNumberValidate from '../../../../utils/helpers/OnlyNumberValidate';\nimport FormBody from '../../../../components/FormBody/FormBody';\nimport { useRateById } from './hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Dispatcher } from '../../../../types/store';\nimport { useForm } from 'react-hook-form';\nimport { RateForm } from '../../../../types/Edit';\nimport { useUploadedEntity } from '../../../../utils/helpers/hooks';\n\nconst RateEdit = (): React.ReactElement => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch<Dispatcher>();\n  const { rateId } = useParams();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm<RateForm>({\n    defaultValues: {\n      price: '',\n      rateTypeId: 'Выберите город',\n    }\n  });\n  const [rateTypes, loading] = useRateTypes();\n  const rateUploading = useUploadedEntity(rateId, 'point');\n  const fetchRateLoading = useRateById(rateId, setValue);\n\n  return (\n    <>\n      <Helmet>\n        <title>Need For Drive - Карточка тарифа</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Home page\" />\n      </Helmet>\n      <ContentContainer title=\"Карточка тарифа\">\n        <FormBody title=\"Настройки тарифа\">\n          <Form.Group controlId=\"carName\">\n            <Form.Label>Тип тарифа</Form.Label>\n            <Form.Select\n              size=\"sm\"\n              value={selectedRateType}\n              onChange={(e) => setSelectedRateType(e.target.value)}\n              disabled={loading}\n            >\n              <option value=\"Выберите тип тарифа\">Выберите тип</option>\n              {rateTypes && rateTypes.data.map((rateType) => (\n                <option key={rateType.id} value={rateType.id}>{`${rateType.name} - ${rateType.unit}`}</option>\n              ))}\n            </Form.Select>\n          </Form.Group>\n          <Form.Group controlId=\"ratePrice\">\n            <Form.Label>Цена, ₽</Form.Label>\n            <div className=\"input-wrap\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Введите цену\"\n                aria-describedby=\"ratePrice\"\n                onKeyDown={(e) => onlyNumberValidate(e)}\n              />\n            </div>\n          </Form.Group>\n        </FormBody>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default RateEdit;\n","import { UseFormSetValue } from 'react-hook-form/dist/types/form';\nimport { RateForm } from '../../../../types/Edit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatcher } from '../../../../types/store';\nimport { useEffect } from 'react';\nimport { RateState } from '../../../../types/Rates';\nimport { fetchRate } from '../../../../store/Rates/thunks';\n\nexport const useRateById = (rateId: string, setValue: UseFormSetValue<RateForm>): boolean => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { rateById, rateByIdLoading } = useSelector<{\n    rate: RateState;\n  }, RateState>((state) => state.rate);\n\n  const setValuesToForm = async (rate): Promise<void> => {\n    setValue('price', rate.price, { shouldDirty: true });\n  };\n\n  useEffect(() => {\n    if (rateId) {\n      dispatch(fetchRate(rateId));\n    }\n  }, [rateId]);\n\n  useEffect(() => {\n    if (rateById && rateId) {\n      setValuesToForm(rateById);\n    }\n  }, [rateById]);\n\n  return rateByIdLoading;\n};\n","__webpack_require__.h = () => (\"94556b1f99ac6dd209f3\")"],"names":[],"sourceRoot":""}