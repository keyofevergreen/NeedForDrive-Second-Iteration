{"version":3,"file":"index.cd44898dbd48b682fc26.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AADA;AANA;AAaA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AADA;AADA;AAKA;AAIA;AACA;AACA;AAJA;AAQA;AACA;AAAA;AADA;AAVA;AAVA;AAHA;AADA;AANA;AA8CA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AARA;AALA;AAiBA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AADA;AAOA;AACA;;AAAA;AAEA;AAKA;AACA;AAPA;AADA;AAaA;AACA;AAAA;AADA;AAdA;AAZA;AAHA;AAvBA;AANA;AA0EA;;AAEA;;;;;;;;AC5GA","sources":["webpack://NeedForDrive-Second-Iteration/./src/components/TableItem/TableItem.tsx","webpack://NeedForDrive-Second-Iteration/./src/pages/OrderStatus/OrderStatus.tsx","webpack://NeedForDrive-Second-Iteration/./src/pages/Points/Points.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SettingButton from '../SettingButton/SettingButton';\n\ninterface ITableItem {\n  columns: (string | number)[],\n  id?: string,\n  pathToEditPage: string,\n}\n\nconst TableItem = ({ columns, id, pathToEditPage }: ITableItem): React.ReactElement => {\n  return (\n    <tr>\n      {columns.map(((columnData, index) => (\n        <td key={`${columnData}-${index}`}>\n          {columnData}\n        </td>\n      )))}\n      <td>\n        <Link to={`/edit/${pathToEditPage}/${id}`}>\n          <SettingButton />\n        </Link>\n      </td>\n    </tr>\n  );\n};\n\nexport default TableItem;\n","import React from 'react';\nimport { Form, Table } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport useResize from '../../hooks/useResize';\nimport ContentContainer from '../../components/ContentContainer/ContentContainer';\nimport TableItem from '../../components/TableItem/TableItem';\nimport Spin from '../../components/Spin/Spin';\nimport { useOrderStatuses, useSortedOrderStatus } from './hooks';\nimport AddTableItemLink from '../../components/AddTableItemLink/AddTableItemLink';\n\nconst OrderStatus = (): React.ReactElement => {\n  const isResponsive = useResize(1, 1024);\n  const [orderStatus, orderStatusLoading] = useOrderStatuses();\n  const sortedOrderStatuses = useSortedOrderStatus(orderStatus);\n\n  return (\n    <>\n      <Helmet>\n        <title>Need For Drive - Статусы заказов</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Home page\" />\n      </Helmet>\n      <ContentContainer title=\"Статусы заказов\">\n        <div className=\"table-container\">\n          <AddTableItemLink to=\"/edit/order-status\" />\n          {orderStatus && !orderStatusLoading && (\n            <Table\n              hover\n              borderless\n              responsive={isResponsive}\n            >\n              <thead>\n                <tr>\n                  <th>Название статуса</th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedOrderStatuses.map((status) => (\n                  <TableItem\n                    key={status.id}\n                    id={status.id}\n                    columns={[status.name]}\n                    pathToEditPage=\"order-status\"\n                  />\n                ))}\n                {sortedOrderStatuses.length === 0 && (\n                  <tr>\n                    <td>\n                      По вашему запросу ничего не найдено\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </Table>\n          )}\n          {orderStatusLoading && (\n            <Spin />\n          )}\n        </div>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default OrderStatus;\n","import React, { useState } from 'react';\nimport { Form, Table } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { usePoints } from './hooks';\nimport { useCities } from '../Cities/hooks';\nimport useResize from '../../hooks/useResize';\nimport ContentContainer from '../../components/ContentContainer/ContentContainer';\nimport TableFilter from '../../components/TableFilter/TableFilter';\nimport TableItem from '../../components/TableItem/TableItem';\nimport Spin from '../../components/Spin/Spin';\nimport AddTableItemLink from '../../components/AddTableItemLink/AddTableItemLink';\n\nconst Points = (): React.ReactElement => {\n  const isResponsive = useResize(1, 1024);\n  const [cities, citiesLoading] = useCities();\n  const [page, setPage] = useState<number>(0);\n  const [cityFilter, setCityFilter] = useState<string | null>('Все города');\n  const [filters, setFilters] = useState<string | null>('Все города');\n  const [points, pointsLoading] = usePoints(filters, page);\n\n  const submitFilter = (): void => {\n    setFilters(cityFilter);\n    setPage(0);\n  };\n\n  const resetFilter = (): void => {\n    setFilters(null);\n    setCityFilter('Все города');\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Need For Drive - Пункты выдачи</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Home page\" />\n      </Helmet>\n      <ContentContainer\n        title=\"Пункты выдачи\"\n        page={page}\n        itemCount={points?.count}\n        onSetPage={setPage}\n      >\n        <TableFilter\n          onSubmitFilter={submitFilter}\n          onResetFilter={resetFilter}\n          isFiltered={filters && filters !== 'Все города'}\n        >\n          <Form.Select\n            size=\"sm\"\n            value={cityFilter}\n            onChange={(e) => setCityFilter(e.target.value)}\n            disabled={citiesLoading}\n          >\n            <option value=\"Все города\">Все города</option>\n            {cities && cities.map((city) => (\n              <option key={city.id} value={city.id}>{city.name}</option>\n            ))}\n          </Form.Select>\n        </TableFilter>\n        <div className=\"table-container\">\n          <AddTableItemLink to=\"/edit/point\" />\n          {points && !pointsLoading && (\n            <Table\n              hover\n              borderless\n              responsive={isResponsive}\n            >\n              <thead>\n                <tr>\n                  <th>Пункт выдачи</th>\n                  <th>Адрес</th>\n                  <th>Город</th>\n                </tr>\n              </thead>\n              <tbody>\n                {points.data.map((point) => (\n                  <TableItem\n                    columns={[\n                      point.name,\n                      point.address,\n                      point.cityId?.name || 'Не указан',\n                    ]}\n                    id={point.id}\n                    pathToEditPage=\"point\"\n                    key={point.id}\n                  />\n                ))}\n                {points.data.length === 0 && (\n                  <tr>\n                    <td>\n                      По вашему запросу ничего не найдено\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </Table>\n          )}\n          {pointsLoading && (\n            <Spin />\n          )}\n        </div>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Points;\n","__webpack_require__.h = () => (\"f8d7f3ba44f7f44a010d\")"],"names":[],"sourceRoot":""}