{"version":3,"file":"index.a5777cdaf89c13f318c5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAVA;AAuBA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AANA;AADA;AAUA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AAAA;AADA;AAfA;AAfA;AAHA;AA7BA;AANA;AAoFA;;AAEA;;;;;;;;;;;;;;;;;;;;AC9IA;AACA;AACA;AAEA;;;;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAJA;AAQA;AAAA;AAEA;AADA;AAAA;AAKA;AACA;AAAA;AAAA;AADA;AAlBA;AAyBA;;AAEA;;;;;;;;AChDA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Cars/Cars.tsx","webpack://NeedForDrive-Second-Iteration/./src/pages/Cars/components/CarItem/CarItem.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { useCars } from './hooks';\nimport { useCategory } from '../Categories/hooks';\nimport { CarSort } from '../../types/Cars';\nimport useResize from '../../hooks/useResize';\nimport ContentContainer from '../../components/ContentContainer/ContentContainer';\nimport CarItem from './components/CarItem/CarItem';\nimport Spin from '../../components/Spin/Spin';\nimport TableFilter from '../../components/TableFilter/TableFilter';\nimport CarFilters from './components/CarFilters/CarFilters';\nimport AddTableItemLink from '../../components/AddTableItemLink/AddTableItemLink';\n\nconst Cars = (): React.ReactElement => {\n  const isResponsive = useResize(1, 1024);\n\n  const [categories, categoriesLoading] = useCategory();\n  const [categoryFilter, setCategoryFilter] = useState<string>('Все категории');\n  const [tankFilter, setTankFilter] = useState<string>('Любой запас топлива');\n  const [lowerPriceFilter, setLowerPriceFilter] = useState<number | null>(0);\n  const [higherPriceFilter, setHigherPriceFilter] = useState<number | null>(999999);\n  const [page, setPage] = useState<number>(0);\n  const [filters, setFilters] = useState<CarSort>({\n    categoryId: 'Все категории',\n    tank: 'Любой запас топлива',\n    lowerPrice: 0,\n    higherPrice: 999999,\n  });\n  const [cars, carsLoading, carsError] = useCars(filters, page);\n\n  const submitFilter = (): void => {\n    setFilters({\n      categoryId: categoryFilter,\n      tank: tankFilter,\n      lowerPrice: lowerPriceFilter,\n      higherPrice: higherPriceFilter,\n    });\n    setPage(0);\n  };\n\n  const resetFilter = (): void => {\n    setFilters({\n      categoryId: 'Все категории',\n      tank: 'Любой запас топлива',\n      lowerPrice: 0,\n      higherPrice: 999999,\n    });\n    setLowerPriceFilter(0);\n    setHigherPriceFilter(999999);\n    setCategoryFilter('Все категории');\n    setTankFilter('Любой запас топлива');\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Need For Drive - Список авто</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Home page\" />\n      </Helmet>\n      <ContentContainer\n        title=\"Список авто\"\n        page={page}\n        itemCount={cars?.count}\n        onSetPage={setPage}\n      >\n        <TableFilter\n          onSubmitFilter={submitFilter}\n          onResetFilter={resetFilter}\n          isFiltered={\n            filters.categoryId !== 'Все категории' ||\n            filters.tank !== 'Любой запас топлива' ||\n            filters.lowerPrice !== 0 ||\n            filters.higherPrice !== 999999\n          }\n        >\n          <CarFilters\n            categories={categories}\n            categoriesFilter={categoryFilter}\n            setCategoriesFilter={setCategoryFilter}\n            categoriesLoading={categoriesLoading}\n            tankFilter={tankFilter}\n            setTankFilter={setTankFilter}\n            lowerPriceFilter={lowerPriceFilter}\n            setLowerPriceFilter={setLowerPriceFilter}\n            higherPriceFilter={higherPriceFilter}\n            setHigherPriceFilter={setHigherPriceFilter}\n          />\n        </TableFilter>\n        <div className=\"table-container\">\n          <AddTableItemLink to=\"/edit/car\" />\n          {cars && !carsLoading && !carsError && (\n            <Table\n              hover\n              borderless\n              responsive={isResponsive}\n            >\n              <thead>\n                <tr>\n                  <th>Модель</th>\n                  <th>Категория</th>\n                  <th>Цвета</th>\n                  <th>Стоимость аренды, ₽</th>\n                  <th>Топливо</th>\n                  <th>Номер</th>\n                </tr>\n              </thead>\n              <tbody>\n                {cars.data.map((car) => (\n                  <CarItem\n                    key={car.id}\n                    id={car.id}\n                    name={car.name}\n                    category={car.categoryId}\n                    colors={car.colors}\n                    priceMin={car.priceMin}\n                    priceMax={car.priceMax}\n                    tank={car.tank}\n                    number={car.number}\n                  />\n                ))}\n                {cars.data.length === 0 && (\n                  <tr>\n                    <td>\n                      По вашему запросу ничего не найдено\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </Table>\n          )}\n          {carsLoading && (\n            <Spin />\n          )}\n        </div>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Cars;\n","import React from 'react';\nimport classNames from 'classnames';\nimport SettingButton from '../../../../components/SettingButton/SettingButton';\nimport { Category } from '../../../../types/Category';\nimport { Link } from 'react-router-dom';\n\ninterface ICarProps {\n  name: string,\n  id: string,\n  category: Category,\n  colors: string[] | null,\n  priceMin: number,\n  priceMax: number,\n  tank: number | null,\n  number: string,\n}\n\nconst CarItem = ({ name, category, colors, priceMin, priceMax, tank, number, id }: ICarProps): React.ReactElement => {\n  const categoryString = category.name.charAt(0).toUpperCase() + category.name.slice(1);\n\n  return (\n    <tr>\n      <td className=\"capitalize\">{name}</td>\n      <td>{category ? categoryString : 'Не указана'}</td>\n      <td className=\"capitalize\" style={{ maxWidth: '200px' }}>{colors.join(', ')}</td>\n      <td>\n        <div>\n          {`от ${priceMin}`}\n        </div>\n        <div>\n          {`до ${priceMax}`}\n        </div>\n      </td>\n      <td>{tank ? `${tank}%` : 'Неизвестно'}</td>\n      <td\n        className={classNames(number ? 'uppercase' : '')}\n      >\n        {number ? `${number}` : 'Не указан'}\n      </td>\n      <td>\n        <Link to={`/edit/car/${id}`}>\n          <SettingButton />\n        </Link>\n      </td>\n    </tr>\n  );\n};\n\nexport default CarItem;\n","__webpack_require__.h = () => (\"086fb67f961982c38ae8\")"],"names":[],"sourceRoot":""}