{"version":3,"file":"index.ec8a6a27376f13d277d9.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;;;;AAEA;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;AAAA;AAGA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AANA;AASA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAbA;AAdA;AAkCA;;AAEA;;;;;;;;AC5EA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Order/components/OrderItemStatusButtons/OrderItemStatusButtons.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { OrderStatus, OrderStatusState } from '../../../../types/OrderStatus';\nimport CheckMark from '../../../../assets/CheckMark.component.svg';\nimport CloseIcon from '../../../../assets/CloseIcon.component.svg';\nimport { Order, OrderSort } from '../../../../types/Order';\nimport { Dispatcher } from '../../../../types/store';\nimport { editEntity } from '../../../../store/Edit/thunks';\n\nconst cx = classNames;\n\ninterface IOrderItemStatusButtons {\n  currentOrderStatus: OrderStatus,\n  filters: OrderSort,\n  page: number,\n  order: Order,\n}\n\nconst OrderItemStatusButtons = ({ currentOrderStatus, filters, page, order }: IOrderItemStatusButtons): React.ReactElement => {\n  const { id, carId, cityId, pointId } = order;\n  const dispatch = useDispatch<Dispatcher>();\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const { orderStatus, loading, submitStatusId, cancelStatusId } = useSelector<{\n    orderStatus: OrderStatusState;\n  }, OrderStatusState>((state) => state.orderStatus);\n\n  const onSubmitStatus = (): void => {\n    dispatch(editEntity(\n      { orderStatusId: submitStatusId },\n      'order', id, `Заказ №${id}, ${carId.name} в ${cityId.name} на ${pointId.address} сохранен`\n    ));\n  };\n\n  const onCancelStatus = (): void => {\n    dispatch(editEntity({ orderStatusId: cancelStatusId }, 'order', id, `Заказ №${id}, ${carId.name} в ${cityId.name} на ${pointId.address} отменен`));\n  };\n\n  return (\n    <ButtonGroup className={cx('order-item-status-edit-btn', { 'edit-mode': editMode })}>\n      {!editMode && currentOrderStatus.name === 'Новые' && (\n        <>\n          <Button size=\"sm\" variant=\"outline-primary\">Подтвердить</Button>\n          <Button size=\"sm\" variant=\"outline-danger\">Отменить</Button>\n        </>\n      )}\n      {!editMode && currentOrderStatus.name !== 'Новые' && (\n        <>\n          <Button size=\"sm\" variant=\"outline-danger\">Отменить</Button>\n          <Button size=\"sm\" variant=\"outline-primary\" onClick={() => setEditMode(true)}>Изменить</Button>\n        </>\n      )}\n      {editMode && currentOrderStatus.name !== 'Новые' && (\n        <>\n          <Form.Select\n            size=\"sm\"\n            disabled={loading}\n            className=\"status-edit-select\"\n          >\n            {orderStatus && orderStatus.map((status) => (\n              <option key={status.id} value={status.id}>{status.name}</option>\n            ))}\n          </Form.Select>\n          <Button size=\"sm\" variant=\"outline-primary\" className=\"submit-btn\">\n            <CheckMark />\n          </Button>\n          <Button size=\"sm\" variant=\"outline-danger\" className=\"cancel-btn\">\n            <CloseIcon />\n          </Button>\n        </>\n      )}\n    </ButtonGroup>\n  );\n};\n\nexport default OrderItemStatusButtons;\n","__webpack_require__.h = () => (\"dd1abee9a8f66ff2ac30\")"],"names":[],"sourceRoot":""}