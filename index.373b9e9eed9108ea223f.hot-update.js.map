{"version":3,"file":"index.373b9e9eed9108ea223f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;ACjCA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/RateTypesEdit/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UseFormSetValue } from 'react-hook-form/dist/types/form';\nimport { RateTypeForm } from '../../../../types/Edit';\nimport { Dispatcher } from '../../../../types/store';\nimport { RateTypesState } from '../../../../types/RateTypes';\nimport { fetchRateType } from '../../../../store/RateTypes/thunks';\n\nexport const useRateTypeById = (rateTypeId: string, setValue: UseFormSetValue<RateTypeForm>): boolean => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { rateTypeById, rateTypeByIdLoading } = useSelector<{\n    rateTypes: RateTypesState;\n  }, RateTypesState>((state) => state.rateTypes);\n\n  const setValuesToForm = async (rateType): Promise<void> => {\n    setValue('name', rateType.name, { shouldDirty: true });\n    setValue('unit', rateType.unit, { shouldDirty: true });\n  };\n\n  useEffect(() => {\n    console.log(rateTypeId);\n    if (rateTypeId) {\n      dispatch(fetchRateType(rateTypeId));\n    }\n  }, [rateTypeId]);\n\n  useEffect(() => {\n    if (rateTypeById && rateTypeId) {\n      setValuesToForm(rateTypeById);\n    }\n  }, [rateTypeById]);\n\n  return rateTypeByIdLoading;\n};\n","__webpack_require__.h = () => (\"7b98a70ce4e94639b1a1\")"],"names":[],"sourceRoot":""}