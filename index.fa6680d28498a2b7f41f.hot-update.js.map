{"version":3,"file":"index.fa6680d28498a2b7f41f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;AAEA;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAJA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AASA;AAAA;AAAA;AAAA;AAVA;AATA;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAJA;AASA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAJA;AAQA;AAAA;AAAA;AAAA;AATA;AAWA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AA1BA;AAqCA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAFA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAFA;AAAA;AARA;AAFA;AAkBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AANA;AADA;AAYA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAXA;AAdA;AAjCA;AArCA;AAJA;AANA;AAqHA;;AAEA;;;;;;;;ACxIA","sources":["webpack://NeedForDrive-Second-Iteration/./src/components/FormContainer/FormContainer.tsx","webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/CarEdit/CarEdit.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport classNames from 'classnames/bind';\nimport styles from './styles.module.scss';\n\nconst cx = classNames.bind(styles);\n\ninterface IFormContainerProps {\n  children: React.ReactNode,\n  title: string,\n  className?: string,\n  onCreate?: React.MouseEventHandler,\n  onDelete?: React.MouseEventHandler,\n  isFormCompleted?: boolean,\n  isCreateTable: boolean,\n}\n\nconst FormContainer = ({ children, title, className, onCreate, onDelete, isFormCompleted, isCreateTable }: IFormContainerProps): React.ReactElement => (\n  <Form className={cx('form-container', className)}>\n    <div>\n      <h3>\n        {title}\n      </h3>\n      <div className={styles['form']}>\n        {children}\n      </div>\n    </div>\n    <div className={styles['form-btn-line']}>\n      <div>\n        <Button variant=\"primary\" size=\"sm\" disabled={!isFormCompleted} onClick={onCreate}>\n          {isCreateTable ? 'Создать' : 'Сохранить'}\n        </Button>\n        <Button variant=\"light\" size=\"sm\">\n          Отменить\n        </Button>\n      </div>\n      {isCreateTable && (\n        <Button variant=\"danger\" size=\"sm\">\n          Удалить\n        </Button>\n      )}\n    </div>\n  </Form>\n);\n\nexport default FormContainer;\n","import React, { useEffect } from 'react';\nimport { Button, Form, InputGroup, ProgressBar } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport ContentContainer from '../../../../components/ContentContainer/ContentContainer';\nimport Car from '../../../../assets/carsDefaultImage.png';\nimport styles from './styles.module.scss';\nimport FormContainer from '../../../../components/FormContainer/FormContainer';\n\nconst CarEdit = (): React.ReactElement => {\n  const { carId } = useParams();\n\n  useEffect(() => {\n    console.log(carId);\n  }, [carId]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Need For Drive - Карточка автомобиля</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"description\" content=\"Home page\" />\n      </Helmet>\n      <ContentContainer\n        title=\"Карточка автомобиля\"\n        className={styles['car-edit-container-wrap']}\n      >\n        <div className={styles['car-edit']}>\n          <div className={styles['car-edit__card']}>\n            <img src={Car} alt=\"car-name\" />\n            <div className={styles['car-edit__details']}>\n              <h2>\n                Hyndai, i30N\n              </h2>\n              <span>\n                Компакт-кар\n              </span>\n            </div>\n            <Form.Control\n              type=\"file\"\n              size=\"sm\"\n              className={styles['car-edit__file-input']}\n            />\n            <div className={styles['car-edit__progress-wrap']}>\n              <div className={styles['car-edit__progress-details']}>\n                <span>\n                  Заполнено\n                </span>\n                <span>\n                  75%\n                </span>\n              </div>\n              <ProgressBar now={75} className={styles['car-edit__progress']} animated />\n            </div>\n            <Form.Group className={styles['car-edit__description-textarea']} controlId=\"carDescription\">\n              <Form.Label>Описание</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={4}\n                aria-describedby=\"carDescription\"\n                defaultValue=\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Odio eaque, quidem, commodi soluta qui quae quod dolorum sint alias, possimus illum assumenda eligendi cumque?\"\n              />\n            </Form.Group>\n          </div>\n          <FormContainer\n            title=\"Настройки автомобиля\"\n            isCreateTable={carId}\n            className={styles['car-form-container']}\n          >\n            <Form.Group controlId=\"carName\">\n              <Form.Label>Модель автомобиля</Form.Label>\n              <div className=\"input-wrap\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Введите модель\"\n                  aria-describedby=\"carName\"\n                />\n              </div>\n            </Form.Group>\n            <Form.Group controlId=\"categoryName\">\n              <Form.Label>Тип автомобиля</Form.Label>\n              <div className=\"input-wrap\">\n                <Form.Control\n                  isInvalid\n                  type=\"text\"\n                  placeholder=\"Введите тип\"\n                  defaultValue=\"Ковер-самолет\"\n                  aria-describedby=\"categoryName\"\n                />\n                <Form.Text\n                  id=\"username\"\n                  bsPrefix=\"input-message\"\n                >\n                  Вышла ошибочка\n                </Form.Text>\n              </div>\n            </Form.Group>\n            <Form.Group controlId=\"CarColors\">\n              <Form.Label>Доступные цвета</Form.Label>\n              <div className=\"input-wrap\">\n                <InputGroup className={styles['form__colors-input-group']}>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Введите цвет\"\n                    aria-describedby=\"CarColors\"\n                  />\n                  <Button variant=\"outline-primary\" className={styles['form__colors-add-button']}>\n                    Add Color\n                  </Button>\n                </InputGroup>\n              </div>\n              <div className={styles['form__colors-checkbox']}>\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Красный\"\n                  defaultChecked\n                />\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Зеленый\"\n                  defaultChecked\n                />\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Легендарный\"\n                  defaultChecked\n                />\n              </div>\n            </Form.Group>\n          </FormContainer>\n        </div>\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default CarEdit;\n","__webpack_require__.h = () => (\"5c6df95f1f11c7ad51f1\")"],"names":[],"sourceRoot":""}