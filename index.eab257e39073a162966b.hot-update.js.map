{"version":3,"file":"index.eab257e39073a162966b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;AACA;AAKA;AACA;;AACA;AACA;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;AACA;AAKA;AACA;;AACA;AACA;;;;;;;;ACxCA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Categories/hooks.ts","webpack://NeedForDrive-Second-Iteration/./src/pages/Cities/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCategories } from '../../store/Category/thunks';\nimport { Dispatcher } from '../../types/store';\nimport { Category, CategoryState } from '../../types/Category';\nimport { SearchState } from '../../types/Search';\nimport { UploadedEntityState } from '../../types/Edit';\n\nexport const useCategory = (): [Category[], boolean, number | null] => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { category, loading, error } = useSelector<{\n    category: CategoryState;\n  }, CategoryState>((state) => state.category);\n\n  const { uploadedEntity } = useSelector<{\n    uploadedEntity: UploadedEntityState;\n  }, UploadedEntityState>((state) => state.uploadedEntity);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [uploadedEntity]);\n\n  return [category, loading, error];\n};\n\nexport const useSearchSortedCategory = (categories: Category[]): Category[] => {\n  const { searchSort } = useSelector<{\n    search: SearchState;\n  }, SearchState>((state) => state.search);\n\n  if (categories) {\n    return categories.filter((category) => {\n      return category.name\n        .toLowerCase()\n        .includes(\n          searchSort.toLowerCase()\n        );\n    });\n  }\n  return [];\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCities } from '../../store/Cities/thunks';\nimport { Dispatcher } from '../../types/store';\nimport { CitiesState, City } from '../../types/Cities';\nimport { SearchState } from '../../types/Search';\nimport { UploadedEntityState } from '../../types/Edit';\n\nexport const useCities = (): [City[], boolean, number | null] => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { cities, loading, error } = useSelector<{\n    cities: CitiesState;\n  }, CitiesState>((state) => state.cities);\n\n  const { uploadedEntity } = useSelector<{\n    uploadedEntity: UploadedEntityState;\n  }, UploadedEntityState>((state) => state.uploadedEntity);\n\n  useEffect(() => {\n    dispatch(fetchCities());\n  }, [uploadedEntity]);\n\n  return [cities, loading, error];\n};\n\nexport const useSearchSortedCities = (cities: City[]): City[] => {\n  const { searchSort } = useSelector<{\n    search: SearchState;\n  }, SearchState>((state) => state.search);\n\n  if (cities) {\n    return cities.filter((city) => {\n      return city.name\n        .toLowerCase()\n        .includes(\n          searchSort.toLowerCase()\n        );\n    });\n  }\n  return [];\n};\n","__webpack_require__.h = () => (\"672d5fd142637abae452\")"],"names":[],"sourceRoot":""}