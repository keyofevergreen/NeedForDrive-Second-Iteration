{"version":3,"file":"index.521b91676d227414e59a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AAIA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;AACA;AAKA;AACA;;AACA;AACA;;;;;;;;ACnCA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/OrderStatusEdit/hooks.ts","webpack://NeedForDrive-Second-Iteration/./src/pages/OrderStatus/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UseFormSetValue } from 'react-hook-form/dist/types/form';\nimport { Dispatcher } from '../../../../types/store';\nimport { OrderStatusForm, OrderStatusState } from '../../../../types/OrderStatus';\nimport { fetchOrderStatus } from '../../../../store/OrderStatus/thunks';\nimport { clearUploadedOrderStatusData } from '../../../../store/OrderStatus/actions';\n\nexport const useOrderStatusById = (orderStatusId: string, setValue: UseFormSetValue<OrderStatusForm>): boolean => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { orderStatusById, orderStatusByIdLoading, orderStatusByIdError } = useSelector<{\n    orderStatus: OrderStatusState;\n  }, OrderStatusState>((state) => state.orderStatus);\n\n  const setValuesToForm = async (orderStatus): Promise<void> => {\n    setValue('name', orderStatus.name, { shouldDirty: true });\n    console.log(orderStatus);\n  };\n\n  useEffect(() => {\n    if (orderStatusId) {\n      dispatch(fetchOrderStatus(orderStatusId));\n    }\n  }, [orderStatusId]);\n\n  useEffect(() => {\n    if (orderStatusById && orderStatusId) {\n      setValuesToForm(orderStatusById);\n    }\n  }, [orderStatusById]);\n\n  return orderStatusByIdLoading;\n};\n\nexport const useUploadedOrderStatus = (orderStatusId: string | null, navigate): boolean => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { uploadedOrderStatus, uploadedOrderStatusLoading } = useSelector<{\n    orderStatus: OrderStatusState;\n  }, OrderStatusState>((state) => state.orderStatus);\n  useEffect(() => {\n    if (uploadedOrderStatus && !orderStatusId) {\n      navigate(`/edit/order-status/${uploadedOrderStatus.id}`);\n      dispatch(clearUploadedOrderStatusData());\n    }\n  }, [uploadedOrderStatus]);\n\n  return uploadedOrderStatusLoading;\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOrderStatuses } from '../../store/OrderStatus/thunks';\nimport { Dispatcher } from '../../types/store';\nimport { OrderStatus, OrderStatusState } from '../../types/OrderStatus';\nimport { SearchState } from '../../types/Search';\n\nexport const useOrderStatuses = (): [OrderStatus[], boolean, number | null] => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { orderStatus, loading, error, uploadedOrderStatus } = useSelector<{\n    orderStatus: OrderStatusState;\n  }, OrderStatusState>((state) => state.orderStatus);\n\n  useEffect(() => {\n    dispatch(fetchOrderStatuses());\n  }, [uploadedOrderStatus]);\n\n  return [orderStatus, loading, error];\n};\n\nexport const useSortedOrderStatus = (orderStatuses: OrderStatus[]): OrderStatus[] => {\n  const { searchSort } = useSelector<{\n    search: SearchState;\n  }, SearchState>((state) => state.search);\n\n  if (orderStatuses) {\n    return orderStatuses.filter((orderStatus) => {\n      return orderStatus.name\n        .toLowerCase()\n        .includes(\n          searchSort.toLowerCase()\n        );\n    });\n  }\n  return [];\n};\n","__webpack_require__.h = () => (\"31b6bf3f283f5f421ec1\")"],"names":[],"sourceRoot":""}