{"version":3,"file":"index.7fbadd03f617d9332087.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAJA;AAQA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAJA;AADA;AADA;AAWA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AANA;AADA;AAFA;AA3BA;AADA;AA4CA;;AAEA;;;;;;;;ACjFA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/CarEdit/components/CarCard/CarCard.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { imageOnErrorHandler } from '../../../../../../utils/helpers/imageOnErrorHandler';\nimport InputErrorMessageProvider from '../../../../../../components/InputErrorMessageProvider/InputErrorMessageProvider';\nimport MyProgressBar, { FormState } from '../MyProgressBar/MyProgressBar';\nimport styles from '../../styles.module.scss';\nimport { Category } from '../../../../../../types/Category';\n\ninterface ICarCardPros {\n  image: FileList,\n  carName: string,\n  category: string,\n  categories: Category[],\n  descriptionError: string,\n  descriptionRegister: object,\n  imageError: string,\n  imageRegister: object,\n  progressBarFields: FormState[],\n}\n\nconst CarCard = (props: ICarCardPros): React.ReactElement => {\n  const { image, carName, category, categories, imageError, imageRegister, descriptionError, descriptionRegister, progressBarFields } = props;\n  const memoProgressBarFields = useMemo(() => {\n    return progressBarFields;\n  }, [progressBarFields]);\n\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  useEffect(() => {\n    if (categories) {\n      const currCategoryObject = categories.find((c) => c.id === category);\n      setSelectedCategory(currCategoryObject?.name);\n    }\n  }, [category]);\n\n  return (\n    <div className={styles['car-edit']}>\n      <div className={styles['car-edit__card']}>\n        <img\n          src={image && image.length > 0 ? URL.createObjectURL(image[0]) : ''}\n          alt=\"car-name\"\n          onError={imageOnErrorHandler}\n        />\n        <div className={styles['car-edit__details']}>\n          <h2>\n            {carName}\n          </h2>\n          <span>\n            {selectedCategory && selectedCategory.length > 0 ? selectedCategory : 'Категория не выбрана'}\n          </span>\n        </div>\n        <div className={styles['car-edit__file-input-container']}>\n          <InputErrorMessageProvider errorMessage={imageError}>\n            <Form.Control\n              type=\"file\"\n              accept=\"image/png, image/jpeg\"\n              {...imageRegister}\n              isInvalid={!!(imageError)}\n            />\n          </InputErrorMessageProvider>\n        </div>\n        <MyProgressBar\n          formStates={progressBarFields}\n        />\n        <Form.Group className={styles['car-edit__description-textarea']} controlId=\"carDescription\">\n          <Form.Label>Описание</Form.Label>\n          <InputErrorMessageProvider errorMessage={descriptionError}>\n            <Form.Control\n              as=\"textarea\"\n              rows={4}\n              aria-describedby=\"carDescription\"\n              placeholder=\"Введите описание\"\n              {...descriptionRegister}\n              isInvalid={!!(descriptionError)}\n            />\n          </InputErrorMessageProvider>\n        </Form.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default CarCard;\n","__webpack_require__.h = () => (\"1f6e3ae44f5eafd9857d\")"],"names":[],"sourceRoot":""}