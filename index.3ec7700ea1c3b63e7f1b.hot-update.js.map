{"version":3,"file":"index.3ec7700ea1c3b63e7f1b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AC/BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/RateEdit/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UseFormSetValue } from 'react-hook-form/dist/types/form';\nimport { RateForm } from '../../../../types/Edit';\nimport { Dispatcher } from '../../../../types/store';\nimport { RateState } from '../../../../types/Rates';\nimport { fetchRate } from '../../../../store/Rates/thunks';\n\nexport const useRateById = (rateId: string, setValue: UseFormSetValue<RateForm>): boolean => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { rateById, rateByIdLoading } = useSelector<{\n    rate: RateState;\n  }, RateState>((state) => state.rate);\n\n  const setValuesToForm = async (rate): Promise<void> => {\n    setValue('price', rate.price, { shouldDirty: true });\n  };\n\n  useEffect(() => {\n    if (rateId) {\n      dispatch(fetchRate(rateId));\n    }\n  }, [rateId]);\n\n  useEffect(() => {\n    if (rateById && rateId) {\n      setValuesToForm(rateById);\n    }\n  }, [rateById]);\n\n  return rateByIdLoading;\n};\n","__webpack_require__.h = () => (\"62b474a175e07cf96fa8\")"],"names":[],"sourceRoot":""}