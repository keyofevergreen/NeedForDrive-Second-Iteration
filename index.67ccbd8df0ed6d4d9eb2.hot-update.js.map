{"version":3,"file":"index.67ccbd8df0ed6d4d9eb2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AC1CA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/CarEdit/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createCar } from '../../../../store/Cars/thunks';\nimport { Dispatcher } from '../../../../types/store';\nimport { CarResponse, CarsState } from '../../../../types/Cars';\nimport { CarForm } from '../../../../types/Edit';\n\nexport const useSaveCar = (form: CarForm | null, isEdit: boolean): [CarResponse, boolean, number] => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { postCar, postLoading, postError } = useSelector<{\n    cars: CarsState;\n  }, CarsState>((state) => state.cars);\n  const [body, setBody] = useState<object | null>(null);\n\n  useEffect(() => {\n    if (form) {\n      const { name, categoryId, colors, thumbnail, description } = form;\n      const newForm = new FormData();\n      newForm.append('name', name);\n      newForm.append('thumbnail', thumbnail[0], thumbnail[0].type);\n      newForm.append('categoryId', categoryId);\n      newForm.append('colors', JSON.stringify(colors));\n      newForm.append('description', description);\n      setBody(newForm);\n    }\n  }, [form]);\n\n  useEffect(() => {\n    console.log(postCar);\n  }, [postCar]);\n\n  useEffect(() => {\n    if (body !== null) {\n      if (isEdit) {\n        console.log('hm');\n      } else {\n        dispatch(createCar(body));\n      }\n    }\n  }, [body]);\n\n  return [postCar, postLoading, postError];\n};\n","__webpack_require__.h = () => (\"829bc1d897c5169546e4\")"],"names":[],"sourceRoot":""}