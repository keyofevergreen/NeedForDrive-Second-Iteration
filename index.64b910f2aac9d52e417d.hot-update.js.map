{"version":3,"file":"index.64b910f2aac9d52e417d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AAQA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/store/Rates/thunks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { ThunkResult } from '../../types/thunk';\nimport {\n  requestRate,\n  requestRateError,\n  requestRates,\n  requestRatesError,\n  requestRatesSuccess,\n  requestRateSuccess\n} from './actions';\nimport { addToErrorHandler } from '../ErrorProvider/actions';\n\nexport const fetchRates = (config: object): ThunkResult => async (dispatch, getState, { services }) => {\n  try {\n    dispatch(requestRates());\n    const { data } = await services.table.getEntities('rate', config);\n    dispatch(requestRatesSuccess(data));\n  } catch (error) {\n    dispatch(requestRatesError(error.response.status));\n    dispatch(addToErrorHandler(error.response.status));\n  }\n};\n\nexport const fetchRate = (rateId): ThunkResult => async (dispatch, getState, { services }) => {\n  try {\n    dispatch(requestRate());\n    const { data } = await services.table.getEntities('rate', {}, rateId);\n    dispatch(requestRateSuccess(data.data));\n  } catch (error) {\n    dispatch(requestRateError(error.response.status));\n    dispatch(addToErrorHandler(error.response.status));\n  }\n};\n","__webpack_require__.h = () => (\"7c34989728ae6cbd11db\")"],"names":[],"sourceRoot":""}