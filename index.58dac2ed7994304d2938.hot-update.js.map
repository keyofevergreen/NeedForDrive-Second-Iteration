{"version":3,"file":"index.58dac2ed7994304d2938.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AASA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3EA","sources":["webpack://NeedForDrive-Second-Iteration/./src/store/Cars/thunks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { ThunkResult } from '../../types/thunk';\nimport {\n  requestCar,\n  requestCarError,\n  requestCars,\n  requestCarsError,\n  requestCarsSuccess,\n  requestCarSuccess,\n} from './actions';\nimport { CarObject, CarsAxiosConfig } from '../../types/Cars';\nimport { addSuccessAlert, addToErrorHandler } from '../ErrorProvider/actions';\nimport { uploadEntity, uploadEntityError, uploadEntitySuccess } from '../Edit/actions';\n\nexport const fetchCars = (config: CarsAxiosConfig): ThunkResult => async (dispatch, getState, { services }) => {\n  try {\n    dispatch(requestCars());\n    const { data } = await services.table.getEntities('car', config);\n    dispatch(requestCarsSuccess(data));\n  } catch (error) {\n    dispatch(requestCarsError(error.response.status));\n    dispatch(addToErrorHandler(error.response.status));\n  }\n};\n\nexport const fetchCar = (id): ThunkResult => async (dispatch, getState, { services }) => {\n  try {\n    dispatch(requestCar());\n    const { data } = await services.table.getEntities('car', {}, id);\n    dispatch(requestCarSuccess(data.data));\n  } catch (error) {\n    dispatch(requestCarError(error.response.status));\n    dispatch(addToErrorHandler(error.response.status));\n  }\n};\n\nexport const createCar = (newCar: CarObject): ThunkResult => {\n  return async (dispatch, getState, { services }) => {\n    try {\n      dispatch(uploadEntity());\n      const { data } = await services.table.postEntity('car', newCar);\n      dispatch(uploadEntitySuccess(data.data));\n      dispatch(addSuccessAlert('Машина создана'));\n    } catch (error) {\n      dispatch(uploadEntityError(error.response.status));\n      dispatch(addToErrorHandler(error.response.status));\n    }\n  };\n};\n\nexport const editCar = (car: CarObject, carId: string): ThunkResult => {\n  return async (dispatch, getState, { services }) => {\n    try {\n      dispatch(uploadEntity());\n      const { data } = await services.table.putEntity('car', car, carId);\n      dispatch(uploadEntitySuccess(data.data));\n      dispatch(addSuccessAlert('Машина сохранена'));\n    } catch (error) {\n      dispatch(uploadEntityError(error.response.status));\n      dispatch(addToErrorHandler(error.response.status));\n    }\n  };\n};\n\nexport const deleteCar = (carId): ThunkResult => {\n  return async (dispatch, getState, { services }) => {\n    try {\n      dispatch(uploadEntity());\n      const { data } = await services.table.deleteEntity('car', carId);\n      dispatch(uploadEntitySuccess(data.data));\n      dispatch(addSuccessAlert('Машина удалена'));\n    } catch (error) {\n      dispatch(uploadEntityError(error.response.status));\n      dispatch(addToErrorHandler(error.response.status));\n    }\n  };\n};\n","__webpack_require__.h = () => (\"098db001e658ed6ab805\")"],"names":[],"sourceRoot":""}