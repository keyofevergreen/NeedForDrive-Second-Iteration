{"version":3,"file":"index.57014f6d4bef89f56d29.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAEA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AAPA;AARA;AAqBA;;AAEA;;;;;;;;ACpDA","sources":["webpack://NeedForDrive-Second-Iteration/./src/components/Alert/Alert.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Toast } from 'react-bootstrap';\nimport { Dispatcher } from '../../types/store';\nimport { clearSuccessAlert } from '../../store/ErrorProvider/actions';\nimport { ErrorHandlerState } from '../../types/Error';\nimport CheckMark from '../../assets/CheckMark.component.svg';\nimport CloseIcon from '../../assets/CloseIcon.component.svg';\nimport styles from './styles.module.scss';\nimport { UploadedEntityState } from '../../types/Edit';\n\nconst Alert = (): React.ReactElement => {\n  const dispatch = useDispatch<Dispatcher>();\n  const [show, setShow] = useState<boolean>(false);\n  const [alertMessage, setAlertMessage] = useState<string | null>(null);\n\n  const { successAlertMessage } = useSelector<{\n    uploadedEntity: UploadedEntityState;\n  }, UploadedEntityState>((state) => state.uploadedEntity);\n\n  useEffect(() => {\n    if (successAlertMessage) {\n      setAlertMessage(successAlertMessage);\n      setShow(true);\n      dispatch(clearSuccessAlert());\n    }\n  }, [successAlertMessage]);\n  \n  return (\n    <Toast\n      show={show}\n      className={styles['success-alert-message']}\n      delay={5000}\n      onClose={() => setShow(false)}\n      autohide\n      animation\n    >\n      <Toast.Body>\n        <div>\n          <CheckMark />\n          <span>\n            {`Успех! ${alertMessage}`}\n          </span>\n        </div>\n        <button type=\"button\" onClick={() => setShow(false)}>\n          <CloseIcon />\n        </button>\n      </Toast.Body>\n    </Toast>\n  );\n};\n\nexport default Alert;\n","__webpack_require__.h = () => (\"3c7ab08442b661da8a15\")"],"names":[],"sourceRoot":""}