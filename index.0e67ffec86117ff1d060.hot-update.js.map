{"version":3,"file":"index.0e67ffec86117ff1d060.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AC/BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/utils/helpers/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dispatcher } from '../../types/store';\nimport { UploadedEntityState } from '../../types/Edit';\nimport { clearUploadedEntityData } from '../../store/Edit/actions';\n\nexport const useConvertFile = () => {\n  return (file: File): Promise<string | ArrayBuffer> => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\nexport const useUploadedEntity = (entityId: string | null, entity: string): boolean => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch<Dispatcher>();\n  const { uploadedEntity, uploadedEntityLoading } = useSelector<{\n    uploadedEntity: UploadedEntityState;\n  }, UploadedEntityState>((state) => state.uploadedEntity);\n\n  useEffect(() => {\n    if (uploadedEntity?.id && !entityId) {\n      navigate(`/edit/${entity}/${uploadedEntity.id}`);\n      dispatch(clearUploadedEntityData());\n    }\n  }, [uploadedEntity]);\n\n  return uploadedEntityLoading;\n};\n","__webpack_require__.h = () => (\"8d272bf64531c641eb79\")"],"names":[],"sourceRoot":""}