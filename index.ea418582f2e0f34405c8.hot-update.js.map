{"version":3,"file":"index.ea418582f2e0f34405c8.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA;AACA;;AASA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;AAZA;AAfA;AAgCA;;AAEA;;;;;;;;ACxDA","sources":["webpack://NeedForDrive-Second-Iteration/./src/components/FilterByPriceRange/FilterByPriceRange.tsx","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { ButtonGroup, Form } from 'react-bootstrap';\n\nconst lowerPriceOptions: number[] = [1000, 3000, 5000, 10000];\nconst higherPriceOptions: number[] = [5000, 10000, 25000, 55000, 300000];\n\ninterface IFilterByPriceRange {\n  lowerPriceFilter: number,\n  setLowerPriceFilter: Dispatch<SetStateAction<number>>,\n  higherPriceFilter: number,\n  setHigherPriceFilter: Dispatch<SetStateAction<number>>,\n}\n\nconst FilterByPriceRange = (\n  {\n    lowerPriceFilter,\n    setLowerPriceFilter,\n    higherPriceFilter,\n    setHigherPriceFilter\n  }: IFilterByPriceRange\n): React.ReactElement => {\n  return (\n    <ButtonGroup>\n      <Form.Select\n        size=\"sm\"\n        className=\"range-select\"\n        onChange={(e) => setLowerPriceFilter(Number(e.target.value))}\n        value={lowerPriceFilter}\n      >\n        <option value=\"0\">От 0 ₽</option>\n        {lowerPriceOptions.map((lowerPrice, index) => {\n          if (higherPriceFilter > lowerPrice) {\n            return <option value={lowerPrice} key={index}>{`От ${lowerPrice} ₽`}</option>;\n          }\n          return null;\n        })}\n      </Form.Select>\n      <Form.Select\n        size=\"sm\"\n        className=\"range-select\"\n        onChange={(e) => setHigherPriceFilter(Number(e.target.value))}\n        value={higherPriceFilter}\n      >\n        <option value=\"99999999\">До ∞</option>\n        {higherPriceOptions.map((highPrice, index) => {\n          if (lowerPriceFilter < highPrice) {\n            return <option value={highPrice} key={index}>{`До ${highPrice} ₽`}</option>;\n          }\n          return null;\n        })}\n\n      </Form.Select>\n    </ButtonGroup>\n  );\n};\n\nexport default FilterByPriceRange;\n","__webpack_require__.h = () => (\"d112de9272477e383ddc\")"],"names":[],"sourceRoot":""}