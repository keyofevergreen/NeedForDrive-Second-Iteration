{"version":3,"file":"index.bb843d2820cb7ab7fb4c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AC/BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/Edit/components/CityEdit/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UseFormSetValue } from 'react-hook-form/dist/types/form';\nimport { CityForm } from '../../../../types/Edit';\nimport { Dispatcher } from '../../../../types/store';\nimport { CitiesState } from '../../../../types/Cities';\nimport { fetchCity } from '../../../../store/Cities/thunks';\n\nexport const useCityById = (cityId: string, setValue: UseFormSetValue<CityForm>): boolean => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { cityById, cityByIdLoading } = useSelector<{\n    cities: CitiesState;\n  }, CitiesState>((state) => state.cities);\n\n  const setValuesToForm = async (city): Promise<void> => {\n    setValue('name', city.name, { shouldDirty: true });\n  };\n\n  useEffect(() => {\n    if (cityId) {\n      dispatch(fetchCity(cityId));\n    }\n  }, [cityId]);\n\n  useEffect(() => {\n    if (cityById && cityId) {\n      setValuesToForm(cityById);\n    }\n  }, [cityById]);\n\n  return cityByIdLoading;\n};\n","__webpack_require__.h = () => (\"314088309112357fa91b\")"],"names":[],"sourceRoot":""}