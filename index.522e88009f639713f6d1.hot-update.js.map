{"version":3,"file":"index.522e88009f639713f6d1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;AAIA;AACA;AACA;AAKA;AACA;;AACA;AACA;;;;;;;;AC1CA","sources":["webpack://NeedForDrive-Second-Iteration/./src/pages/OrderStatus/hooks.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOrderStatuses } from '../../store/OrderStatus/thunks';\nimport { Dispatcher } from '../../types/store';\nimport { OrderStatus, OrderStatusState } from '../../types/OrderStatus';\nimport { SearchState } from '../../types/Search';\nimport { UploadedEntityState } from '../../types/Edit';\n\nexport const useOrderStatuses = (): [OrderStatus[], boolean, number | null] => {\n  const dispatch = useDispatch<Dispatcher>();\n  const { orderStatus, loading, error } = useSelector<{\n    orderStatus: OrderStatusState;\n  }, OrderStatusState>((state) => state.orderStatus);\n\n  const { uploadedEntity } = useSelector<{\n    uploadedEntity: UploadedEntityState;\n  }, UploadedEntityState>((state) => state.uploadedEntity);\n\n  useEffect(() => {\n    if (uploadedEntity) {\n      dispatch(fetchOrderStatuses());\n    }\n  }, [uploadedEntity]);\n\n  return [orderStatus, loading, error];\n};\n\nexport const useSortedOrderStatus = (orderStatuses: OrderStatus[]): OrderStatus[] => {\n  const { searchSort } = useSelector<{\n    search: SearchState;\n  }, SearchState>((state) => state.search);\n\n  if (orderStatuses) {\n    return orderStatuses.filter((orderStatus) => {\n      return orderStatus.name\n        .toLowerCase()\n        .includes(\n          searchSort.toLowerCase()\n        );\n    });\n  }\n  return [];\n};\n","__webpack_require__.h = () => (\"3a65c0cc511e436ee65f\")"],"names":[],"sourceRoot":""}