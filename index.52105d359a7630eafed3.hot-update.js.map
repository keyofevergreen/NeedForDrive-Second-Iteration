{"version":3,"file":"index.52105d359a7630eafed3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAAA;AAAA;AAEA;AAFA;AAIA;AAAA;AAAA;AAEA;AAFA;AAbA;AAmBA;;;;;;;;AC1BA","sources":["webpack://NeedForDrive-Second-Iteration/./src/store/ErrorProvider/actions.ts","webpack://NeedForDrive-Second-Iteration/./src/store/ErrorProvider/reducer.ts","webpack://NeedForDrive-Second-Iteration/webpack/runtime/getFullHash"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const addToErrorHandler = createAction<number>('Error added to error handler');\n\nexport const resetErrorHandler = createAction('Error handler is reset');\n\nexport const addSuccessAlert = createAction<string>('Success alert has set');\n\nexport const clearSuccessAlert = createAction('Success alert cleared');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { ErrorHandlerState } from '../../types/Error';\nimport { addSuccessAlert, addToErrorHandler, clearSuccessAlert, resetErrorHandler } from './actions';\n\nconst errorHandlerReducer = createReducer<ErrorHandlerState>({\n  errors: [],\n  successAlert: null,\n}, {\n  [addToErrorHandler.type]: (state, { payload }) => ({\n    ...state,\n    errors: [...state.errors, payload],\n  }),\n  [resetErrorHandler.type]: (state) => ({\n    ...state,\n    errors: [],\n  }),\n  [addSuccessAlert.type]: (state, { payload }) => ({\n    ...state,\n    successAlert: payload,\n  }),\n  [clearSuccessAlert.type]: (state, { payload }) => ({\n    ...state,\n    successAlert: null,\n  }),\n});\n\nexport default errorHandlerReducer;\n","__webpack_require__.h = () => (\"005b7c76869cfa9d36f9\")"],"names":[],"sourceRoot":""}